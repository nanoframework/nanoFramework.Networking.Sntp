trigger:
  paths:
    exclude: 
    - "doc"
    - "*.md"
    - ".appveyor.yml"

# add nf-tools repo to resources (for Azure Pipelines templates)
resources:
  repositories:
    - repository: templates
      type: github
      name: nanoframework/nf-tools
      endpoint: nfbot

pool:
  vmImage: 'VS2017-Win2016'

variables:
  solution: '**/source/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  nugetPackageName: 'nanoFramework.Networking.Sntp'

steps:

# need this here in order to persist GitHub credentials 
- checkout: self
  persistCredentials: true

- task: NuGetToolInstaller@0

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
    feedsToUse: config
    nugetConfigPath: source/NuGet.config

- template: azure-pipelines-templates/nb-gitversioning.yml@templates 

- task: InstallnFBuildComponents@1
  displayName: Install nanoFramework MSBuild components

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# we don't have tests (yet)
# - task: VSTest@2
#   inputs:
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

- task: NuGetCommand@2
  inputs:
    command: 'custom' 
    arguments: 'pack source\$(nugetPackageName).nuspec -Version 1.0.2-preview-020'
    displayName: Pack NuGet with class library

- task: CopyFiles@1
  inputs:
    sourceFolder: $(Build.SourcesDirectory)
    Contents: |
      **\$(nugetPackageName)*.nupkg
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    flattenFolders: true
  condition: and( succeeded(), ne(variables['Build.Reason'], 'PullRequest') )
  displayName: Collecting deployable artifacts

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: deployables
    ArtifactType: Container
  condition: and( succeeded(), ne(variables['Build.Reason'], 'PullRequest') )
  displayName: Publish deployables artifacts

# push NuGet packages to MyGet feed (always happens except on PR builds)
- task: NuGetCommand@2
  inputs:
    command: push
    nuGetFeedType: external
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    publishFeedCredentials: 'MyGet'
  condition: and( succeeded(), ne(variables['Build.Reason'], 'PullRequest') )
  displayName: Push NuGet packages to MyGet

# push NuGet packages to NuGet (happens on tag builds for any branch)
- task: NuGetCommand@2
  inputs:
    command: push
    nuGetFeedType: external
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    publishFeedCredentials: 'NuGet'
  condition: and( succeeded(), ne(variables['Build.Reason'], 'PullRequest'), contains(variables['Build.SourceBranchName'], 'tags') )
  displayName: Push NuGet packages to NuGet
