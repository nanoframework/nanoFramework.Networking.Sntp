trigger:
  branches:
    include: ["master", "*"]  
  paths:
    exclude: ["doc", "*.md", ".appveyor.yml"]

pr:
  branches:
    include: [ "*" ]

pool:
  vmImage: 'VS2017-Win2016'

variables:
  solution: '**/source/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@0

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
    feedsToUse: config
    nugetConfigPath: source/NuGet.config

- task: DotNetCoreCLI@2  
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . nbgv
  displayName: Install NBGV tool

- script: nbgv cloud -p "source"
  displayName: Set build number
  condition: ne(variables['system.pullrequest.isfork'], true)

# install nanoFramework VS extension
- task: PowerShell@2
  inputs:
    filePath: 'install-nf-vs-extension.ps1'
    errorActionPreference: 'stop'

# # Batch Script
# - task: BatchScript@1
#   inputs:
#     filename: '$(INSTALLER_PATH)'

# # Run a command line script using cmd.exe on Windows and bash on macOS and Linux.
# - task: CmdLine@2
#   inputs:
#     script: '"C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\IDE\VSIXInstaller.exe" /q D:\a\_temp\nanoFramework.Tools.VS2017.Extension.vsix'
#     #workingDirectory: # Optional
#     #failOnStderr: false # Optional

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# we don't have tests (yet)
# - task: VSTest@2
#   inputs:
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

- task: CopyFiles@1
  inputs:
    sourceFolder: $(System.DefaultWorkingDirectory)
    Contents: |
      **source\Nuget.*\*.nupkg
    TargetFolder: $(Build.ArtifactStagingDirectory)/deployables
    flattenFolders: true
  displayName: Collecting deployable artifacts

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: $(Build.ArtifactStagingDirectory)/deployables
    ArtifactName: deployables
    ArtifactType: Container
  displayName: Publish deployables artifacts

- task: NuGetCommand@2
  inputs:
    command: push
    nuGetFeedType: external
    publishFeedCredentials: 'MyGet'
